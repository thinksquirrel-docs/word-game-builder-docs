digraph "ISelectableLetterTile"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ISelectableLetterTile\n||+ DeselectTile()\l+ SelectTile()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{ILetterTile\n|+ currentPointValue\l+ defaultPointValue\l+ letter\l+ serializedLetter\l+ wildcardLetter\l|+ ChangeLetter()\l+ DespawnTile()\l+ RemoveWildcard()\l+ SetWildcard()\l+ SetWildcard()\l+ SpawnTile()\l}",height=0.2,width=0.4,color="black",URL="$interface_thinksquirrel_software_1_1_word_game_builder_1_1_i_letter_tile.html",tooltip="(Advanced) An interface defining a letter tile. Implementations must derive from MonoBehaviour in som..."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{IMonoBehaviour\n|+ enabled\l+ gameObject\l+ hideFlags\l+ name\l+ tag\l+ transform\l|+ CancelInvoke()\l+ CancelInvoke()\l+ GetInstanceID()\l+ Invoke()\l+ InvokeRepeating()\l+ IsInvoking()\l+ IsInvoking()\l+ StartCoroutine()\l+ StartCoroutine()\l+ StartCoroutine()\l+ StopAllCoroutines()\l+ StopCoroutine()\l+ ToString()\l}",height=0.2,width=0.4,color="black",URL="$interface_thinksquirrel_software_1_1_word_game_builder_1_1_i_mono_behaviour.html"];
}
